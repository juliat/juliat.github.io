#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.


compile 'assets/images/*/' do
  if item.binary?
    # we don't have pngout on our system
    # uncomment to optimize images
    # filter :image_compressor, :pngout => false
  end
end
compile '/assets/*/' do
  # don’t filter or layout
end

route '/assets/css/*/' do
   item.identifier.chop + '.css'
end

route '/assets/js/*/' do
  item.identifier.chop + '.js'
end

compile '/portfolio/*/' do
  filter :erb
  if (item[:extension] == 'md')
    filter :kramdown
  end
  filter :rubypants #typography!
  layout 'portfolio-piece'
  filter :relativize_paths, :type => :html
end

compile '/case-studies/*/' do
  filter :erb
  if (item[:extension] == 'md')
    filter :kramdown
  end
  layout 'portfolio-piece'
  filter :relativize_paths, :type => :html
end

compile '*' do
  if item.binary?
    # don’t filter binary items
  else
    filter :erb
    layout 'default'
    filter :relativize_paths, :type => :html
  end
end

route '/portfolio/' do
  '/index.html'
  item.identifier + 'index.html'
end

route '*' do
  if item.binary?
    # Write item with identifier /foo/ to /foo.ext
    item.identifier.chop + '.' + item[:extension]
  else
    # Write item with identifier /foo/ to /foo/index.html
    item.identifier + 'index.html'
  end
end

layout '*', :erb
